name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.4.0"

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: ${{ env.UV_VERSION }}
      
      - name: Install dependencies
        run: |
          uv sync --dev
      
      - name: Run Ruff check
        run: |
          uv run ruff check . --output-format=github
      
      - name: Run Ruff format check
        run: |
          uv run ruff format . --check
      
      - name: Run Black check
        run: |
          uv run black . --check --diff
      
      - name: Run MyPy
        run: |
          uv run mypy src/

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: ${{ env.UV_VERSION }}
      
      - name: Install dependencies
        run: |
          uv sync --dev
      
      - name: Run tests with coverage
        run: |
          uv run pytest tests/ --cov=src --cov-report=term-missing --cov-report=xml --cov-report=html
      
      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: ${{ env.UV_VERSION }}
      
      - name: Install dependencies
        run: |
          uv sync --dev
          uv add bandit safety
      
      - name: Run Bandit security scan
        run: |
          uv run bandit -r src/ -f json -o bandit-report.json
        continue-on-error: true
      
      - name: Run Safety check
        run: |
          uv run safety check --json
        continue-on-error: true

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: ${{ env.UV_VERSION }}
      
      - name: Build package
        run: |
          uv build
      
      - name: Check package
        run: |
          uv run pip install --no-deps dist/*.whl
          uv run python -c "import {package_name}; print({package_name}.__version__)"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/