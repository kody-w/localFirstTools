# GitHub Actions Linting and Code Quality Template
# Run code quality checks and formatting validation

name: Lint and Format

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint and type check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-lint-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-lint-uv-
          
    - name: Install dependencies
      run: |
        uv sync --dev
        
    - name: Run ruff linter
      run: |
        uv run ruff check src/{package_name} tests/
        
    - name: Check ruff formatting
      run: |
        uv run ruff format --check src/{package_name} tests/
        
    - name: Run mypy type checking
      run: |
        uv run mypy src/{package_name} --strict --ignore-missing-imports
        
    - name: Check import sorting
      run: |
        uv run ruff check --select I src/{package_name} tests/
        
  security:
    name: Security checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        uv sync --dev
        uv add --dev bandit safety
        
    - name: Run bandit security linter
      run: |
        uv run bandit -r src/{package_name} -ll
        
    - name: Check for known vulnerabilities
      run: |
        uv run safety check
        
  documentation:
    name: Documentation checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        uv sync --dev
        
    - name: Check docstring coverage
      run: |
        uv run interrogate src/{package_name} -v --fail-under 80
        
    - name: Validate markdown files
      uses: DavidAnson/markdownlint-cli2-action@v16
      with:
        globs: '**/*.md'

# Customization Notes:
# - Replace {package_name} with your package name
# - Adjust linting rules in pyproject.toml
# - Configure security scan exclusions as needed
# - Add or remove tools based on project requirements
# - Consider adding spell-checking with codespell